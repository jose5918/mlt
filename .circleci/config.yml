version: 2
jobs:
  build:
    docker:
      - image: ubuntu:16.04
    environment:
      KUBECONFIG: /home/circleci/.kube/config
      MLT_TEST_CLUSTER_ENV_FILE: /tmp/mlt_test_cluster
    # gets around pyenv with circleci: https://discuss.circleci.com/t/testing-in-different-environments/450/12
    dependencies:
      override:
      - pip install tox tox-pyenv
      - pyenv local 2.7.12 3.5.2
    working_directory: ~/repo
    steps:
      - checkout

      - run:
          name: Installing test/lint dependencies
          command: |
            apt-get update
            apt-get install -yq --no-install-recommends --fix-missing \
                curl \
                git \
                make \
                python \
                python-dev \
                python-pip \
                python-setuptools \
                python3 \
                python3-dev \
                python3-pip \
                python3-setuptools \
                python3-wheel \
                tar

    #   - run:
    #       name: lint tests
    #       command: |
    #         make lint

    #   - run:
    #       name: Run unit tests
    #       command: |
    #         make test


      - run:
          name: Installing docker dependencies
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
            curl -L https://github.com/docker/compose/releases/download/1.16.0/docker-compose-`uname -s`-`uname -m` | tee -a /usr/local/bin/docker-compose > /dev/null
            chmod +x /usr/local/bin/docker-compose

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Install gcloud
          command: |
            GCLOUD_SDK_VERSION="197.0.0"
            curl -sSLo google-cloud-sdk.tar.gz https://storage.googleapis.com/cloud-sdk-release/google-cloud-sdk-${GCLOUD_SDK_VERSION}-linux-x86_64.tar.gz \
            && tar zxf google-cloud-sdk.tar.gz \
            && rm google-cloud-sdk.tar.gz \
            && ./google-cloud-sdk/install.sh --usage-reporting=true --path-update=true
            ./google-cloud-sdk/bin/gcloud components install beta --quiet
      - run:
          name: Create test cluster
          command: |
            export MLT_TEST_CLUSTER="mlt-test-cluster$CIRCLE_BUILD_NUM"
            echo $GKE_CREDENTIALS | base64 -d > mltkey.json
            ./google-cloud-sdk/bin/gcloud auth activate-service-account mltjson@intelai-mlt.iam.gserviceaccount.com --key-file=mltkey.json
            ./google-cloud-sdk/bin/gcloud --project intelai-mlt beta container clusters create "$MLT_TEST_CLUSTER" \
            --zone "us-west1-a" --cluster-version "1.9.6-gke.1"
            apt-get install -y kubectl
            ./google-cloud-sdk/bin/gcloud --project intelai-mlt beta container clusters get-credentials "$MLT_TEST_CLUSTER" \
            --zone "us-west1-a"
      - run:
          name: Install kubeflow
          command: |
            # since running on a cluster with RBAC enabled, need workaround
            # https://github.com/kubeflow/kubeflow/blob/master/user_guide.md#rbac-clusters
            kubectl create clusterrolebinding default-admin --clusterrole=cluster-admin --user=mltjson@intelai-mlt.iam.gserviceaccount.com
            ./scripts/kubeflow_install.sh

      - run:
          name: Run e2e tests
          command: |
            make test-e2e
      - run:
          name: cleanup cluster
          when: always
          command: |
            set -x
            echo $TEST_VAR | base64 --decode > mlttest.json
            export MLT_TEST_CLUSTER="mlt-test-cluster$CIRCLE_BUILD_NUM"
            ./google-cloud-sdk/bin/gcloud beta container clusters delete "$MLT_TEST_CLUSTER" --zone "us-west1-a" --project "intelai-mlt" --quiet
